{"ast":null,"code":"var _jsxFileName = \"/Users/rzeinalov/Developer/shell-game/client/src/ShellGameCanvas.js\",\n  _s = $RefreshSig$();\n// ShellGameCanvas.js\nimport React, { useRef, useEffect } from 'react';\n\n/**\n * Props:\n *  - ballPosition: which cup (0..2) actually hides the ball\n *  - disabledCups: array of bools [cup0Disabled, cup1Disabled, cup2Disabled]\n *  - gameOver: bool\n *  - foundBall: bool (true if user guessed it)\n *  - onCupClick(index) => void\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ShellGameCanvas({\n  ballPosition,\n  disabledCups,\n  gameOver,\n  foundBall,\n  onCupClick\n}) {\n  _s();\n  const canvasRef = useRef(null);\n\n  // Canvas dimensions\n  const width = 600;\n  const height = 300;\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    let angle = 0;\n    let animationFrameId;\n\n    // Preload or define a background image if you want\n    const bgImage = new Image();\n    bgImage.src = '/background.jpg'; // Place \"background.jpg\" in public/ folder\n\n    function drawScene() {\n      ctx.clearRect(0, 0, width, height);\n\n      // 1) Draw background if loaded\n      if (bgImage.complete && bgImage.naturalWidth > 0) {\n        ctx.drawImage(bgImage, 0, 0, width, height);\n      } else {\n        ctx.fillStyle = '#a5d8ff';\n        ctx.fillRect(0, 0, width, height);\n      }\n\n      // 2) Draw the cups\n      for (let i = 0; i < 3; i++) {\n        // X positions: e.g. 100, 300, 500\n        // Y is around 180\n        const x = 100 + i * 200;\n        const y = 180;\n        const isDisabled = disabledCups[i];\n        drawCup3D(ctx, x, y, angle + i, isDisabled);\n      }\n\n      // 3) If foundBall OR gameOver, reveal the ball (draw ball at ballPosition)\n      if ((foundBall || gameOver) && ballPosition !== null) {\n        const xBall = 100 + ballPosition * 200;\n        const yBall = 180;\n        drawBall3D(ctx, xBall, yBall, angle);\n      }\n    }\n    function animate() {\n      angle += 0.02; // spin speed\n      drawScene();\n      animationFrameId = requestAnimationFrame(animate);\n    }\n    animate();\n    return () => {\n      cancelAnimationFrame(animationFrameId);\n    };\n  }, [ballPosition, disabledCups, gameOver, foundBall]);\n  function drawCup3D(ctx, centerX, centerY, spinAngle, disabled) {\n    ctx.save();\n\n    // Rotate around the cup center to simulate 3D spin\n    ctx.translate(centerX, centerY);\n    ctx.rotate(spinAngle);\n    ctx.translate(-centerX, -centerY);\n\n    // Shadow under cup\n    ctx.fillStyle = 'rgba(0,0,0,0.3)';\n    ctx.beginPath();\n    ctx.ellipse(centerX, centerY + 30, 30, 8, 0, 0, 2 * Math.PI);\n    ctx.fill();\n\n    // Cup color\n    const grad = ctx.createLinearGradient(centerX, centerY - 60, centerX, centerY);\n    grad.addColorStop(0, disabled ? '#ff9999' : '#ff6666'); // top\n    grad.addColorStop(1, 'red'); // bottom\n\n    ctx.fillStyle = grad;\n\n    // Body of cup (like a trapezoid)\n    ctx.beginPath();\n    ctx.moveTo(centerX - 20, centerY - 60);\n    ctx.lineTo(centerX - 30, centerY);\n    ctx.lineTo(centerX + 30, centerY);\n    ctx.lineTo(centerX + 20, centerY - 60);\n    ctx.closePath();\n    ctx.fill();\n\n    // Top ellipse\n    ctx.beginPath();\n    ctx.ellipse(centerX, centerY - 60, 20, 8, 0, 0, 2 * Math.PI);\n    ctx.fill();\n\n    // Bottom ellipse (rim)\n    ctx.beginPath();\n    ctx.ellipse(centerX, centerY, 30, 10, 0, 0, 2 * Math.PI);\n    ctx.fill();\n    ctx.restore();\n  }\n  function drawBall3D(ctx, centerX, centerY, spinAngle) {\n    ctx.save();\n\n    // We'll position the ball just below the cup\n    const ballY = centerY + 5;\n\n    // Slight rotation for style\n    ctx.translate(centerX, ballY);\n    ctx.rotate(-spinAngle * 0.7);\n    ctx.translate(-centerX, -ballY);\n\n    // Shadow\n    ctx.fillStyle = 'rgba(0,0,0,0.2)';\n    ctx.beginPath();\n    ctx.ellipse(centerX, ballY + 14, 14, 4, 0, 0, 2 * Math.PI);\n    ctx.fill();\n\n    // Ball gradient\n    const grad = ctx.createRadialGradient(centerX - 5, ballY - 5, 4, centerX, ballY, 14);\n    grad.addColorStop(0, '#ffffaa');\n    grad.addColorStop(1, 'yellow');\n    ctx.fillStyle = grad;\n    ctx.beginPath();\n    ctx.arc(centerX, ballY, 14, 0, 2 * Math.PI);\n    ctx.fill();\n    ctx.restore();\n  }\n\n  // On click, figure out which cup user might have selected\n  function handleCanvasClick(e) {\n    const rect = canvasRef.current.getBoundingClientRect();\n    const clickX = e.clientX - rect.left;\n    const clickY = e.clientY - rect.top;\n\n    // We know cups are at (100,180), (300,180), (500,180)\n    // We'll approximate a bounding circle for each\n    for (let i = 0; i < 3; i++) {\n      const cx = 100 + i * 200;\n      const cy = 180;\n      const dx = clickX - cx;\n      const dy = clickY - cy;\n      const dist = Math.sqrt(dx * dx + dy * dy);\n      if (dist < 40) {\n        onCupClick(i);\n        break;\n      }\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    width: width,\n    height: height,\n    onClick: handleCanvasClick,\n    style: {\n      border: '1px solid #ccc',\n      display: 'block',\n      margin: '0 auto'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 5\n  }, this);\n}\n_s(ShellGameCanvas, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = ShellGameCanvas;\nexport default ShellGameCanvas;\nvar _c;\n$RefreshReg$(_c, \"ShellGameCanvas\");","map":{"version":3,"names":["React","useRef","useEffect","jsxDEV","_jsxDEV","ShellGameCanvas","ballPosition","disabledCups","gameOver","foundBall","onCupClick","_s","canvasRef","width","height","canvas","current","ctx","getContext","angle","animationFrameId","bgImage","Image","src","drawScene","clearRect","complete","naturalWidth","drawImage","fillStyle","fillRect","i","x","y","isDisabled","drawCup3D","xBall","yBall","drawBall3D","animate","requestAnimationFrame","cancelAnimationFrame","centerX","centerY","spinAngle","disabled","save","translate","rotate","beginPath","ellipse","Math","PI","fill","grad","createLinearGradient","addColorStop","moveTo","lineTo","closePath","restore","ballY","createRadialGradient","arc","handleCanvasClick","e","rect","getBoundingClientRect","clickX","clientX","left","clickY","clientY","top","cx","cy","dx","dy","dist","sqrt","ref","onClick","style","border","display","margin","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/rzeinalov/Developer/shell-game/client/src/ShellGameCanvas.js"],"sourcesContent":["// ShellGameCanvas.js\nimport React, { useRef, useEffect } from 'react';\n\n/**\n * Props:\n *  - ballPosition: which cup (0..2) actually hides the ball\n *  - disabledCups: array of bools [cup0Disabled, cup1Disabled, cup2Disabled]\n *  - gameOver: bool\n *  - foundBall: bool (true if user guessed it)\n *  - onCupClick(index) => void\n */\nfunction ShellGameCanvas({\n  ballPosition,\n  disabledCups,\n  gameOver,\n  foundBall,\n  onCupClick\n}) {\n  const canvasRef = useRef(null);\n\n  // Canvas dimensions\n  const width = 600;\n  const height = 300;\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n\n    let angle = 0;\n    let animationFrameId;\n\n    // Preload or define a background image if you want\n    const bgImage = new Image();\n    bgImage.src = '/background.jpg'; // Place \"background.jpg\" in public/ folder\n\n    function drawScene() {\n      ctx.clearRect(0, 0, width, height);\n\n      // 1) Draw background if loaded\n      if (bgImage.complete && bgImage.naturalWidth > 0) {\n        ctx.drawImage(bgImage, 0, 0, width, height);\n      } else {\n        ctx.fillStyle = '#a5d8ff';\n        ctx.fillRect(0, 0, width, height);\n      }\n\n      // 2) Draw the cups\n      for (let i = 0; i < 3; i++) {\n        // X positions: e.g. 100, 300, 500\n        // Y is around 180\n        const x = 100 + i * 200;\n        const y = 180;\n\n        const isDisabled = disabledCups[i];\n        drawCup3D(ctx, x, y, angle + i, isDisabled);\n      }\n\n      // 3) If foundBall OR gameOver, reveal the ball (draw ball at ballPosition)\n      if ((foundBall || gameOver) && ballPosition !== null) {\n        const xBall = 100 + ballPosition * 200;\n        const yBall = 180;\n        drawBall3D(ctx, xBall, yBall, angle);\n      }\n    }\n\n    function animate() {\n      angle += 0.02; // spin speed\n      drawScene();\n      animationFrameId = requestAnimationFrame(animate);\n    }\n    animate();\n\n    return () => {\n      cancelAnimationFrame(animationFrameId);\n    };\n  }, [ballPosition, disabledCups, gameOver, foundBall]);\n\n  function drawCup3D(ctx, centerX, centerY, spinAngle, disabled) {\n    ctx.save();\n\n    // Rotate around the cup center to simulate 3D spin\n    ctx.translate(centerX, centerY);\n    ctx.rotate(spinAngle);\n    ctx.translate(-centerX, -centerY);\n\n    // Shadow under cup\n    ctx.fillStyle = 'rgba(0,0,0,0.3)';\n    ctx.beginPath();\n    ctx.ellipse(centerX, centerY + 30, 30, 8, 0, 0, 2 * Math.PI);\n    ctx.fill();\n\n    // Cup color\n    const grad = ctx.createLinearGradient(centerX, centerY - 60, centerX, centerY);\n    grad.addColorStop(0, disabled ? '#ff9999' : '#ff6666'); // top\n    grad.addColorStop(1, 'red'); // bottom\n\n    ctx.fillStyle = grad;\n\n    // Body of cup (like a trapezoid)\n    ctx.beginPath();\n    ctx.moveTo(centerX - 20, centerY - 60);\n    ctx.lineTo(centerX - 30, centerY);\n    ctx.lineTo(centerX + 30, centerY);\n    ctx.lineTo(centerX + 20, centerY - 60);\n    ctx.closePath();\n    ctx.fill();\n\n    // Top ellipse\n    ctx.beginPath();\n    ctx.ellipse(centerX, centerY - 60, 20, 8, 0, 0, 2 * Math.PI);\n    ctx.fill();\n\n    // Bottom ellipse (rim)\n    ctx.beginPath();\n    ctx.ellipse(centerX, centerY, 30, 10, 0, 0, 2 * Math.PI);\n    ctx.fill();\n\n    ctx.restore();\n  }\n\n  function drawBall3D(ctx, centerX, centerY, spinAngle) {\n    ctx.save();\n\n    // We'll position the ball just below the cup\n    const ballY = centerY + 5;\n\n    // Slight rotation for style\n    ctx.translate(centerX, ballY);\n    ctx.rotate(-spinAngle * 0.7);\n    ctx.translate(-centerX, -ballY);\n\n    // Shadow\n    ctx.fillStyle = 'rgba(0,0,0,0.2)';\n    ctx.beginPath();\n    ctx.ellipse(centerX, ballY + 14, 14, 4, 0, 0, 2 * Math.PI);\n    ctx.fill();\n\n    // Ball gradient\n    const grad = ctx.createRadialGradient(\n      centerX - 5, ballY - 5, 4,\n      centerX, ballY, 14\n    );\n    grad.addColorStop(0, '#ffffaa');\n    grad.addColorStop(1, 'yellow');\n\n    ctx.fillStyle = grad;\n    ctx.beginPath();\n    ctx.arc(centerX, ballY, 14, 0, 2 * Math.PI);\n    ctx.fill();\n\n    ctx.restore();\n  }\n\n  // On click, figure out which cup user might have selected\n  function handleCanvasClick(e) {\n    const rect = canvasRef.current.getBoundingClientRect();\n    const clickX = e.clientX - rect.left;\n    const clickY = e.clientY - rect.top;\n\n    // We know cups are at (100,180), (300,180), (500,180)\n    // We'll approximate a bounding circle for each\n    for (let i = 0; i < 3; i++) {\n      const cx = 100 + i * 200;\n      const cy = 180;\n      const dx = clickX - cx;\n      const dy = clickY - cy;\n      const dist = Math.sqrt(dx * dx + dy * dy);\n      if (dist < 40) {\n        onCupClick(i);\n        break;\n      }\n    }\n  }\n\n  return (\n    <canvas\n      ref={canvasRef}\n      width={width}\n      height={height}\n      onClick={handleCanvasClick}\n      style={{ border: '1px solid #ccc', display: 'block', margin: '0 auto' }}\n    />\n  );\n}\n\nexport default ShellGameCanvas;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}