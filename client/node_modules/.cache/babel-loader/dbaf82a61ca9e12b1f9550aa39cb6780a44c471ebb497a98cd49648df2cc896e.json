{"ast":null,"code":"var _jsxFileName = \"/Users/rzeinalov/Developer/shell-game/client/src/ShellGame.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport './ShellGame.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ShellGame({\n  username\n}) {\n  _s();\n  const [ballPosition, setBallPosition] = useState(null); // 0,1,2\n  const [userGuess, setUserGuess] = useState(null);\n  const [message, setMessage] = useState('');\n  const [wins, setWins] = useState(0);\n  const [losses, setLosses] = useState(0);\n  const correctSFXRef = useRef(null);\n  const wrongSFXRef = useRef(null);\n\n  // Load existing user stats from local storage\n  useEffect(() => {\n    const localWins = localStorage.getItem(`${username}_shellGameWins`);\n    const localLosses = localStorage.getItem(`${username}_shellGameLosses`);\n    if (localWins) setWins(parseInt(localWins, 10));\n    if (localLosses) setLosses(parseInt(localLosses, 10));\n    startNewRound();\n  }, [username]);\n  function startNewRound() {\n    setUserGuess(null);\n    setMessage('');\n    // Randomly choose a position 0..2 for the ball\n    const randomPos = Math.floor(Math.random() * 3);\n    setBallPosition(randomPos);\n  }\n  async function handleGuess(index) {\n    if (userGuess !== null) return; // Already guessed this round\n    setUserGuess(index);\n    const success = index === ballPosition;\n    if (success) {\n      setWins(prev => prev + 1);\n      setMessage('Correct! You found the ball!');\n      if (correctSFXRef.current) correctSFXRef.current.play();\n      // Save to local storage\n      localStorage.setItem(`${username}_shellGameWins`, wins + 1);\n      // Save to DB\n      await saveResultToDB('win');\n    } else {\n      setLosses(prev => prev + 1);\n      setMessage('Wrong! Try again next time.');\n      if (wrongSFXRef.current) wrongSFXRef.current.play();\n      // Save to local storage\n      localStorage.setItem(`${username}_shellGameLosses`, losses + 1);\n      // Save to DB\n      await saveResultToDB('lose');\n    }\n  }\n  async function saveResultToDB(outcome) {\n    try {\n      await axios.post('/api/results', {\n        username,\n        outcome\n      });\n    } catch (error) {\n      console.error('Failed to save result to DB:', error);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"shell-game-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Hello, \", username, \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Wins: \", wins, \" | Losses: \", losses]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cups-container\",\n      children: [0, 1, 2].map(cupIndex => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cup\",\n        onClick: () => handleGuess(cupIndex),\n        children: userGuess !== null && cupIndex === ballPosition ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ball\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hidden-ball\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }, this)\n      }, cupIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        fontWeight: 'bold',\n        marginTop: '20px'\n      },\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), userGuess !== null && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startNewRound,\n      children: \"Play Again\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: correctSFXRef,\n      src: \"/correct.mp3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: wrongSFXRef,\n      src: \"/wrong.mp3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_s(ShellGame, \"yig7l2aB3eBqJGmhlal1hWln1BI=\");\n_c = ShellGame;\nexport default ShellGame;\nvar _c;\n$RefreshReg$(_c, \"ShellGame\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","jsxDEV","_jsxDEV","ShellGame","username","_s","ballPosition","setBallPosition","userGuess","setUserGuess","message","setMessage","wins","setWins","losses","setLosses","correctSFXRef","wrongSFXRef","localWins","localStorage","getItem","localLosses","parseInt","startNewRound","randomPos","Math","floor","random","handleGuess","index","success","prev","current","play","setItem","saveResultToDB","outcome","post","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","cupIndex","onClick","style","fontWeight","marginTop","ref","src","_c","$RefreshReg$"],"sources":["/Users/rzeinalov/Developer/shell-game/client/src/ShellGame.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport './ShellGame.css';\n\nfunction ShellGame({ username }) {\n  const [ballPosition, setBallPosition] = useState(null); // 0,1,2\n  const [userGuess, setUserGuess] = useState(null);\n  const [message, setMessage] = useState('');\n  const [wins, setWins] = useState(0);\n  const [losses, setLosses] = useState(0);\n\n  const correctSFXRef = useRef(null);\n  const wrongSFXRef = useRef(null);\n\n  // Load existing user stats from local storage\n  useEffect(() => {\n    const localWins = localStorage.getItem(`${username}_shellGameWins`);\n    const localLosses = localStorage.getItem(`${username}_shellGameLosses`);\n    if (localWins) setWins(parseInt(localWins, 10));\n    if (localLosses) setLosses(parseInt(localLosses, 10));\n\n    startNewRound();\n  }, [username]);\n\n  function startNewRound() {\n    setUserGuess(null);\n    setMessage('');\n    // Randomly choose a position 0..2 for the ball\n    const randomPos = Math.floor(Math.random() * 3);\n    setBallPosition(randomPos);\n  }\n\n  async function handleGuess(index) {\n    if (userGuess !== null) return; // Already guessed this round\n    setUserGuess(index);\n    const success = (index === ballPosition);\n\n    if (success) {\n      setWins(prev => prev + 1);\n      setMessage('Correct! You found the ball!');\n      if (correctSFXRef.current) correctSFXRef.current.play();\n      // Save to local storage\n      localStorage.setItem(`${username}_shellGameWins`, wins + 1);\n      // Save to DB\n      await saveResultToDB('win');\n    } else {\n      setLosses(prev => prev + 1);\n      setMessage('Wrong! Try again next time.');\n      if (wrongSFXRef.current) wrongSFXRef.current.play();\n      // Save to local storage\n      localStorage.setItem(`${username}_shellGameLosses`, losses + 1);\n      // Save to DB\n      await saveResultToDB('lose');\n    }\n  }\n\n  async function saveResultToDB(outcome) {\n    try {\n      await axios.post('/api/results', {\n        username,\n        outcome\n      });\n    } catch (error) {\n      console.error('Failed to save result to DB:', error);\n    }\n  }\n\n  return (\n    <div className=\"shell-game-container\">\n      <h2>Hello, {username}!</h2>\n      <p>Wins: {wins} | Losses: {losses}</p>\n\n      <div className=\"cups-container\">\n        {[0, 1, 2].map((cupIndex) => (\n          <div\n            key={cupIndex}\n            className=\"cup\"\n            onClick={() => handleGuess(cupIndex)}\n          >\n            {/* Show ball if guessed OR if user guessed that cup and it's correct */}\n            {(userGuess !== null && cupIndex === ballPosition) ? (\n              <div className=\"ball\" />\n            ) : (\n              <div className=\"hidden-ball\" />\n            )}\n          </div>\n        ))}\n      </div>\n\n      <p style={{ fontWeight: 'bold', marginTop: '20px' }}>{message}</p>\n\n      {userGuess !== null && (\n        <button onClick={startNewRound}>\n          Play Again\n        </button>\n      )}\n\n      {/* Sound effects */}\n      <audio ref={correctSFXRef} src=\"/correct.mp3\" />\n      <audio ref={wrongSFXRef} src=\"/wrong.mp3\" />\n    </div>\n  );\n}\n\nexport default ShellGame;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}